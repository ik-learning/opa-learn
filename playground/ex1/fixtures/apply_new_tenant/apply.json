{
  "format_version": "0.1",
  "terraform_version": "0.15.5",
  "variables": {
    "aws_region": {
      "value": "eu-west-1"
    },
    "base_aws_tags": {
      "value": {}
    },
    "services_role_arn": {
      "value": "arn:aws:iam::223451617534:role/dev_doc_services_eu-west-1_main"
    },
    "environment": {
      "value": "dev"
    },
    "global_help_center": {
      "value": false
    },
    "global_help_center_distribution_alias_enabled": {
      "value": false
    },
    "global_help_center_distribution_domain": {
      "value": ""
    },
    "global_help_center_distribution_subdomain": {
      "value": ""
    },
    "global_help_center_ip_allow_list": {
      "value": []
    },
    "global_help_center_public_key_base64": {
      "value": ""
    },
    "global_help_center_s3_path": {
      "value": "global-help-center-content"
    },
    "kiam_role_arn": {
      "value": "arn:aws:iam::335561046948:role/kiam-server-devcluster"
    },
    "kms_allowed_role_arns": {
      "value": [
        "arn:aws:iam::335561046948:role/master-devcluster"
      ]
    },
    "kms_deletion_window_in_days": {
      "value": 30
    },
    "kms_enable_key_rotation": {
      "value": true
    },
    "kms_key_spec": {
      "value": "SYMMETRIC_DEFAULT"
    },
    "replica_regions": {
      "value": {
        "ap-southeast-2": "ap-southeast-1",
        "eu-west-1": "eu-central-1",
        "us-east-1": "us-west-2"
      }
    },
    "s3_bucket_acl": {
      "value": "private"
    },
    "s3_bucket_suffix": {
      "value": "main-v2"
    },
    "s3_bucket_versioning_enabled": {
      "value": true
    },
    "s3_force_destroy": {
      "value": false
    },
    "s3_replica_bucket_suffix": {
      "value": "replica-v2"
    },
    "s3_replica_force_destroy": {
      "value": false
    },
    "tenant_uuid": {
      "value": "d11bfc7b8515"
    },
    "use_kiam": {
      "value": true
    }
  },
  "planned_values": {
    "outputs": {
      "tenant_aws_region": {
        "sensitive": false,
        "value": "eu-west-1"
      },
      "tenant_master_kms_key_alias_arn": {
        "sensitive": false
      },
      "tenant_master_kms_key_arn": {
        "sensitive": false
      },
      "tenant_master_kms_key_id": {
        "sensitive": false
      },
      "tenant_primary_s3_bucket_arn": {
        "sensitive": false
      },
      "tenant_primary_s3_bucket_id": {
        "sensitive": false
      },
      "tenant_replica_kms_key_alias_arn": {
        "sensitive": false
      },
      "tenant_replica_kms_key_arn": {
        "sensitive": false
      },
      "tenant_replica_kms_key_id": {
        "sensitive": false
      },
      "tenant_replica_s3_bucket_arn": {
        "sensitive": false
      },
      "tenant_replica_s3_bucket_id": {
        "sensitive": false
      },
      "tenant_role_arn": {
        "sensitive": false
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_iam_policy.s3_replication_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "s3_replication_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": null,
            "name": "dev-d11bfc7b8515_replication",
            "name_prefix": null,
            "path": "/",
            "tags": null
          }
        },
        {
          "address": "aws_iam_policy.tenant_iam_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "tenant_iam_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": null,
            "name": "dev-d11bfc7b8515_main",
            "name_prefix": null,
            "path": "/",
            "tags": null
          }
        },
        {
          "address": "aws_iam_role.tenant_replication_role",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "tenant_replication_role",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "description": null,
            "force_detach_policies": false,
            "max_session_duration": 3600,
            "name": "dev-d11bfc7b8515-s3-replication-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null
          }
        },
        {
          "address": "aws_iam_role.tenant_role",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "tenant_role",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::335561046948:role/kiam-server-devcluster\"\n      }\n    }\n  ]\n}",
            "description": null,
            "force_detach_policies": false,
            "max_session_duration": 3600,
            "name": "dev-d11bfc7b8515-main",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.s3_replication_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "s3_replication_policy_attachment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "role": "dev-d11bfc7b8515-s3-replication-role"
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.s3_tenant_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "s3_tenant_policy_attachment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "role": "dev-d11bfc7b8515-s3-replication-role"
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.tenant_role_iam_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "tenant_role_iam_policy_attachment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "role": "dev-d11bfc7b8515-main"
          }
        },
        {
          "address": "aws_kms_alias.master_key_alias",
          "mode": "managed",
          "type": "aws_kms_alias",
          "name": "master_key_alias",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "name": "alias/wa2-dev-d11bfc7b8515-eu-west-1-key",
            "name_prefix": null
          }
        },
        {
          "address": "aws_kms_alias.replica_key_alias",
          "mode": "managed",
          "type": "aws_kms_alias",
          "name": "replica_key_alias",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "name": "alias/wa2-dev-d11bfc7b8515-eu-central-1-replica-key",
            "name_prefix": null
          }
        },
        {
          "address": "aws_kms_key.master_key",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "master_key",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": 30,
            "description": "Tenant master key",
            "enable_key_rotation": true,
            "is_enabled": true,
            "key_usage": "ENCRYPT_DECRYPT",
            "tags": {
              "Context": "master",
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-west-1-key",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            },
            "tags_all": {
              "Context": "master",
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-west-1-key",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            }
          }
        },
        {
          "address": "aws_kms_key.replica_key",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "replica_key",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": 30,
            "description": "Tenant replica key",
            "enable_key_rotation": true,
            "is_enabled": true,
            "key_usage": "ENCRYPT_DECRYPT",
            "tags": {
              "Context": "replica",
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-key",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            },
            "tags_all": {
              "Context": "replica",
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-key",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            }
          }
        },
        {
          "address": "aws_s3_bucket.tenant_s3_bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "tenant_s3_bucket",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "acl": "private",
            "bucket": "wa2-dev-d11bfc7b8515-eu-west-1-main-v2",
            "bucket_prefix": null,
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "lifecycle_rule": [
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 2,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/latest: 2 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/latest",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 1,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/hourly: 1 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/hourly",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 7,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/daily: 7 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/daily",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 28,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/weekly: 28 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/weekly",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 3,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "exports: delete current versions after 3 days",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "exports/",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 3,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "imports: delete current versions after 3 days",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "imports/",
                "tags": null,
                "transition": []
              }
            ],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "replication_configuration": [
              {
                "rules": [
                  {
                    "destination": [
                      {
                        "access_control_translation": [],
                        "account_id": "",
                        "storage_class": "STANDARD"
                      }
                    ],
                    "filter": [
                      {
                        "prefix": "",
                        "tags": null
                      }
                    ],
                    "id": "tenant-s3-replication",
                    "prefix": "",
                    "priority": null,
                    "source_selection_criteria": [
                      {
                        "sse_kms_encrypted_objects": [
                          {
                            "enabled": true
                          }
                        ]
                      }
                    ],
                    "status": "Enabled"
                  }
                ]
              }
            ],
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "sse_algorithm": "aws:kms"
                      }
                    ],
                    "bucket_key_enabled": null
                  }
                ]
              }
            ],
            "tags": {
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-west-1-main-v2",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-west-1-main-v2",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            },
            "versioning": [
              {
                "enabled": true,
                "mfa_delete": false
              }
            ],
            "website": []
          }
        },
        {
          "address": "aws_s3_bucket.tenant_s3_replica_bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "tenant_s3_replica_bucket",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "acl": "private",
            "bucket": "wa2-dev-d11bfc7b8515-eu-central-1-replica-v2",
            "bucket_prefix": null,
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "lifecycle_rule": [
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 2,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/latest: 2 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/latest",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 1,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/hourly: 1 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/hourly",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 7,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/daily: 7 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/daily",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 28,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "rethinkdb-backup/weekly: 28 day delete",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "rethinkdb-backup/weekly",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 3,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "exports: delete current versions after 3 days",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "exports/",
                "tags": null,
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 2,
                "enabled": true,
                "expiration": [
                  {
                    "date": null,
                    "days": 3,
                    "expired_object_delete_marker": null
                  }
                ],
                "id": "imports: delete current versions after 3 days",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "imports/",
                "tags": null,
                "transition": []
              }
            ],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "replication_configuration": [],
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "sse_algorithm": "aws:kms"
                      }
                    ],
                    "bucket_key_enabled": null
                  }
                ]
              }
            ],
            "tags": {
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-v2",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-v2",
              "Solution": "Wave",
              "Tenant": "d11bfc7b8515"
            },
            "versioning": [
              {
                "enabled": true,
                "mfa_delete": false
              }
            ],
            "website": []
          }
        },
        {
          "address": "aws_s3_bucket_policy.tenant_s3_bucket_policy_attatchment",
          "mode": "managed",
          "type": "aws_s3_bucket_policy",
          "name": "tenant_s3_bucket_policy_attatchment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0
        },
        {
          "address": "aws_s3_bucket_policy.tenant_s3_replica_bucket_policy_attatchment",
          "mode": "managed",
          "type": "aws_s3_bucket_policy",
          "name": "tenant_s3_replica_bucket_policy_attatchment",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.kms_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "kms_policy_document",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::335561046948:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Enable IAM User Permissions"
              },
              {
                "actions": [
                  "kms:CreateGrant",
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:List*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [
                  {
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Allow IAM Role to use key"
              }
            ],
            "version": null
          }
        },
        {
          "address": "data.aws_iam_policy_document.s3_replication_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "s3_replication_policy_document",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:GetReplicationConfiguration",
                  "s3:ListBucket"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": null
              },
              {
                "actions": [
                  "s3:Delete*",
                  "s3:Get*",
                  "s3:List*",
                  "s3:Put*",
                  "s3:ReplicateDelete",
                  "s3:ReplicateObject"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": null
              },
              {
                "actions": [
                  "s3:GetObjectVersion",
                  "s3:GetObjectVersionForReplication",
                  "s3:GetObjectVersionTagging",
                  "s3:ReplicateDelete",
                  "s3:ReplicateObject",
                  "s3:ReplicateTags"
                ],
                "condition": [
                  {
                    "test": "StringLikeIfExists",
                    "values": [
                      "aws:kms"
                    ],
                    "variable": "s3:x-amz-server-side-encryption"
                  }
                ],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": null
              },
              {
                "actions": [
                  "kms:Decrypt"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "s3.eu-west-1.amazonaws.com"
                    ],
                    "variable": "kms:ViaService"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      null
                    ],
                    "variable": "kms:EncryptionContext:aws:s3:arn"
                  }
                ],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": "DecryptionContext"
              },
              {
                "actions": [
                  "kms:Encrypt"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "s3.eu-central-1.amazonaws.com"
                    ],
                    "variable": "kms:ViaService"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      null
                    ],
                    "variable": "kms:EncryptionContext:aws:s3:arn"
                  }
                ],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": "EncryptionContext"
              }
            ],
            "version": null
          }
        },
        {
          "address": "data.aws_iam_policy_document.tenant_iam_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_iam_policy_document",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:Delete*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": null
              },
              {
                "actions": [
                  "s3:Get*",
                  "s3:List*",
                  "s3:Put*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": null
              },
              {
                "actions": [
                  "s3:GetObjectVersionTagging",
                  "s3:ReplicateDelete",
                  "s3:ReplicateObject",
                  "s3:ReplicateTags"
                ],
                "condition": [
                  {
                    "test": "StringLikeIfExists",
                    "values": [
                      "AES256",
                      "aws:kms"
                    ],
                    "variable": "s3:x-amz-server-side-encryption"
                  },
                  {
                    "test": "StringLikeIfExists",
                    "values": [
                      null
                    ],
                    "variable": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                  }
                ],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [],
                "resources": [],
                "sid": null
              }
            ],
            "version": null
          }
        },
        {
          "address": "data.aws_iam_policy_document.tenant_s3_policy",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_s3_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:PutObject"
                ],
                "condition": [
                  {
                    "test": "StringNotEquals",
                    "values": [
                      "true"
                    ],
                    "variable": "s3:x-amz-server-side-encryption"
                  },
                  {
                    "test": "StringNotEquals",
                    "values": [
                      null
                    ],
                    "variable": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                  }
                ],
                "effect": "Deny",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "DenyUnEncryptedObjectUploads"
              },
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [
                  {
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "TenantS3BucketPolicy"
              }
            ],
            "version": null
          }
        },
        {
          "address": "data.aws_iam_policy_document.tenant_s3_replica_policy",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_s3_replica_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "s3:PutObject"
                ],
                "condition": [
                  {
                    "test": "StringNotEquals",
                    "values": [
                      "aws:kms"
                    ],
                    "variable": "s3:x-amz-server-side-encryption"
                  },
                  {
                    "test": "StringNotEquals",
                    "values": [
                      null
                    ],
                    "variable": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                  }
                ],
                "effect": "Deny",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "DenyUnEncryptedObjectUploads"
              },
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": null,
                "not_principals": [],
                "not_resources": null,
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::335561046948:role/wa2_role_services_cross_account",
                      "arn:aws:iam::335561046948:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "TenantS3BucketPolicy"
              }
            ],
            "version": null
          }
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_iam_policy.s3_replication_policy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "s3_replication_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": null,
          "name": "dev-d11bfc7b8515_replication",
          "name_prefix": null,
          "path": "/",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "policy": true,
          "policy_id": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_policy.tenant_iam_policy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "tenant_iam_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": null,
          "name": "dev-d11bfc7b8515_main",
          "name_prefix": null,
          "path": "/",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "policy": true,
          "policy_id": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role.tenant_replication_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "tenant_replication_role",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      }\n    }\n  ]\n}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "dev-d11bfc7b8515-s3-replication-role",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role.tenant_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "tenant_role",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::335561046948:role/kiam-server-devcluster\"\n      }\n    }\n  ]\n}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "dev-d11bfc7b8515-main",
          "name_prefix": null,
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role_policy_attachment.s3_replication_policy_attachment",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "s3_replication_policy_attachment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "role": "dev-d11bfc7b8515-s3-replication-role"
        },
        "after_unknown": {
          "id": true,
          "policy_arn": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_iam_role_policy_attachment.s3_tenant_policy_attachment",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "s3_tenant_policy_attachment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "role": "dev-d11bfc7b8515-s3-replication-role"
        },
        "after_unknown": {
          "id": true,
          "policy_arn": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_iam_role_policy_attachment.tenant_role_iam_policy_attachment",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "tenant_role_iam_policy_attachment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "role": "dev-d11bfc7b8515-main"
        },
        "after_unknown": {
          "id": true,
          "policy_arn": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_kms_alias.master_key_alias",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "master_key_alias",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "alias/wa2-dev-d11bfc7b8515-eu-west-1-key",
          "name_prefix": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "target_key_arn": true,
          "target_key_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_kms_alias.replica_key_alias",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "replica_key_alias",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "alias/wa2-dev-d11bfc7b8515-eu-central-1-replica-key",
          "name_prefix": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "target_key_arn": true,
          "target_key_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_kms_key.master_key",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "master_key",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": 30,
          "description": "Tenant master key",
          "enable_key_rotation": true,
          "is_enabled": true,
          "key_usage": "ENCRYPT_DECRYPT",
          "tags": {
            "Context": "master",
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-west-1-key",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          },
          "tags_all": {
            "Context": "master",
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-west-1-key",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "key_id": true,
          "policy": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_kms_key.replica_key",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "replica_key",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": 30,
          "description": "Tenant replica key",
          "enable_key_rotation": true,
          "is_enabled": true,
          "key_usage": "ENCRYPT_DECRYPT",
          "tags": {
            "Context": "replica",
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-key",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          },
          "tags_all": {
            "Context": "replica",
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-key",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "key_id": true,
          "policy": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_s3_bucket.tenant_s3_bucket",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "tenant_s3_bucket",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "acl": "private",
          "bucket": "wa2-dev-d11bfc7b8515-eu-west-1-main-v2",
          "bucket_prefix": null,
          "cors_rule": [],
          "force_destroy": false,
          "grant": [],
          "lifecycle_rule": [
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 2,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/latest: 2 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/latest",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 1,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/hourly: 1 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/hourly",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 7,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/daily: 7 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/daily",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 28,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/weekly: 28 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/weekly",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 3,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "exports: delete current versions after 3 days",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "exports/",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 3,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "imports: delete current versions after 3 days",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "imports/",
              "tags": null,
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "policy": null,
          "replication_configuration": [
            {
              "rules": [
                {
                  "destination": [
                    {
                      "access_control_translation": [],
                      "account_id": "",
                      "storage_class": "STANDARD"
                    }
                  ],
                  "filter": [
                    {
                      "prefix": "",
                      "tags": null
                    }
                  ],
                  "id": "tenant-s3-replication",
                  "prefix": "",
                  "priority": null,
                  "source_selection_criteria": [
                    {
                      "sse_kms_encrypted_objects": [
                        {
                          "enabled": true
                        }
                      ]
                    }
                  ],
                  "status": "Enabled"
                }
              ]
            }
          ],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "sse_algorithm": "aws:kms"
                    }
                  ],
                  "bucket_key_enabled": null
                }
              ]
            }
          ],
          "tags": {
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-west-1-main-v2",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          },
          "tags_all": {
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-west-1-main-v2",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          },
          "versioning": [
            {
              "enabled": true,
              "mfa_delete": false
            }
          ],
          "website": []
        },
        "after_unknown": {
          "acceleration_status": true,
          "arn": true,
          "bucket_domain_name": true,
          "bucket_regional_domain_name": true,
          "cors_rule": [],
          "grant": [],
          "hosted_zone_id": true,
          "id": true,
          "lifecycle_rule": [
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "region": true,
          "replication_configuration": [
            {
              "role": true,
              "rules": [
                {
                  "destination": [
                    {
                      "access_control_translation": [],
                      "bucket": true,
                      "replica_kms_key_id": true
                    }
                  ],
                  "filter": [
                    {}
                  ],
                  "source_selection_criteria": [
                    {
                      "sse_kms_encrypted_objects": [
                        {}
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "request_payer": true,
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": true
                    }
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": [],
          "website_domain": true,
          "website_endpoint": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cors_rule": [],
          "grant": [],
          "lifecycle_rule": [
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [
            {
              "rules": [
                {
                  "destination": [
                    {
                      "access_control_translation": []
                    }
                  ],
                  "filter": [
                    {}
                  ],
                  "source_selection_criteria": [
                    {
                      "sse_kms_encrypted_objects": [
                        {}
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {}
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": []
        }
      }
    },
    {
      "address": "aws_s3_bucket.tenant_s3_replica_bucket",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "tenant_s3_replica_bucket",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "acl": "private",
          "bucket": "wa2-dev-d11bfc7b8515-eu-central-1-replica-v2",
          "bucket_prefix": null,
          "cors_rule": [],
          "force_destroy": false,
          "grant": [],
          "lifecycle_rule": [
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 2,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/latest: 2 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/latest",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 1,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/hourly: 1 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/hourly",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 7,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/daily: 7 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/daily",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 28,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "rethinkdb-backup/weekly: 28 day delete",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "rethinkdb-backup/weekly",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 3,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "exports: delete current versions after 3 days",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "exports/",
              "tags": null,
              "transition": []
            },
            {
              "abort_incomplete_multipart_upload_days": 2,
              "enabled": true,
              "expiration": [
                {
                  "date": null,
                  "days": 3,
                  "expired_object_delete_marker": null
                }
              ],
              "id": "imports: delete current versions after 3 days",
              "noncurrent_version_expiration": [
                {
                  "days": 1
                }
              ],
              "noncurrent_version_transition": [],
              "prefix": "imports/",
              "tags": null,
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "policy": null,
          "replication_configuration": [],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "sse_algorithm": "aws:kms"
                    }
                  ],
                  "bucket_key_enabled": null
                }
              ]
            }
          ],
          "tags": {
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-v2",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          },
          "tags_all": {
            "Environment": "dev",
            "Name": "wa2-dev-d11bfc7b8515-eu-central-1-replica-v2",
            "Solution": "Wave",
            "Tenant": "d11bfc7b8515"
          },
          "versioning": [
            {
              "enabled": true,
              "mfa_delete": false
            }
          ],
          "website": []
        },
        "after_unknown": {
          "acceleration_status": true,
          "arn": true,
          "bucket_domain_name": true,
          "bucket_regional_domain_name": true,
          "cors_rule": [],
          "grant": [],
          "hosted_zone_id": true,
          "id": true,
          "lifecycle_rule": [
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "region": true,
          "replication_configuration": [],
          "request_payer": true,
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {
                      "kms_master_key_id": true
                    }
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": [],
          "website_domain": true,
          "website_endpoint": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cors_rule": [],
          "grant": [],
          "lifecycle_rule": [
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            },
            {
              "expiration": [
                {}
              ],
              "noncurrent_version_expiration": [
                {}
              ],
              "noncurrent_version_transition": [],
              "transition": []
            }
          ],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [],
          "server_side_encryption_configuration": [
            {
              "rule": [
                {
                  "apply_server_side_encryption_by_default": [
                    {}
                  ]
                }
              ]
            }
          ],
          "tags": {},
          "tags_all": {},
          "versioning": [
            {}
          ],
          "website": []
        }
      }
    },
    {
      "address": "aws_s3_bucket_policy.tenant_s3_bucket_policy_attatchment",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "tenant_s3_bucket_policy_attatchment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "bucket": true,
          "id": true,
          "policy": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_s3_bucket_policy.tenant_s3_replica_bucket_policy_attatchment",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "tenant_s3_replica_bucket_policy_attatchment",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "bucket": true,
          "id": true,
          "policy": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "data.aws_iam_policy_document.kms_policy_document",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "kms_policy_document",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "override_json": null,
          "override_policy_documents": null,
          "policy_id": null,
          "source_json": null,
          "source_policy_documents": null,
          "statement": [
            {
              "actions": [
                "kms:*"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [
                {
                  "identifiers": [
                    "arn:aws:iam::335561046948:root"
                  ],
                  "type": "AWS"
                }
              ],
              "resources": [
                "*"
              ],
              "sid": "Enable IAM User Permissions"
            },
            {
              "actions": [
                "kms:CreateGrant",
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey*",
                "kms:List*",
                "kms:ReEncrypt*"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [
                {
                  "type": "AWS"
                }
              ],
              "resources": [
                "*"
              ],
              "sid": "Allow IAM Role to use key"
            }
          ],
          "version": null
        },
        "after_unknown": {
          "id": true,
          "json": true,
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false
                  ]
                }
              ],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": true
                }
              ],
              "resources": [
                false
              ]
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false
                  ]
                }
              ],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": []
                }
              ],
              "resources": [
                false
              ]
            }
          ]
        }
      }
    },
    {
      "address": "data.aws_iam_policy_document.s3_replication_policy_document",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "s3_replication_policy_document",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "override_json": null,
          "override_policy_documents": null,
          "policy_id": null,
          "source_json": null,
          "source_policy_documents": null,
          "statement": [
            {
              "actions": [
                "s3:GetReplicationConfiguration",
                "s3:ListBucket"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": null
            },
            {
              "actions": [
                "s3:Delete*",
                "s3:Get*",
                "s3:List*",
                "s3:Put*",
                "s3:ReplicateDelete",
                "s3:ReplicateObject"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": null
            },
            {
              "actions": [
                "s3:GetObjectVersion",
                "s3:GetObjectVersionForReplication",
                "s3:GetObjectVersionTagging",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags"
              ],
              "condition": [
                {
                  "test": "StringLikeIfExists",
                  "values": [
                    "aws:kms"
                  ],
                  "variable": "s3:x-amz-server-side-encryption"
                }
              ],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": null
            },
            {
              "actions": [
                "kms:Decrypt"
              ],
              "condition": [
                {
                  "test": "StringLike",
                  "values": [
                    "s3.eu-west-1.amazonaws.com"
                  ],
                  "variable": "kms:ViaService"
                },
                {
                  "test": "StringLike",
                  "values": [
                    null
                  ],
                  "variable": "kms:EncryptionContext:aws:s3:arn"
                }
              ],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": "DecryptionContext"
            },
            {
              "actions": [
                "kms:Encrypt"
              ],
              "condition": [
                {
                  "test": "StringLike",
                  "values": [
                    "s3.eu-central-1.amazonaws.com"
                  ],
                  "variable": "kms:ViaService"
                },
                {
                  "test": "StringLike",
                  "values": [
                    null
                  ],
                  "variable": "kms:EncryptionContext:aws:s3:arn"
                }
              ],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": "EncryptionContext"
            }
          ],
          "version": null
        },
        "after_unknown": {
          "id": true,
          "json": true,
          "statement": [
            {
              "actions": [
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                true
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                true,
                true
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                true
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    true
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                true
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    true
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                true
              ]
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "statement": [
            {
              "actions": [
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                false,
                false
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                false
              ]
            }
          ]
        }
      }
    },
    {
      "address": "data.aws_iam_policy_document.tenant_iam_policy_document",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "tenant_iam_policy_document",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "override_json": null,
          "override_policy_documents": null,
          "policy_id": null,
          "source_json": null,
          "source_policy_documents": null,
          "statement": [
            {
              "actions": [
                "s3:Delete*"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": null
            },
            {
              "actions": [
                "s3:Get*",
                "s3:List*",
                "s3:Put*"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": null
            },
            {
              "actions": [
                "s3:GetObjectVersionTagging",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags"
              ],
              "condition": [
                {
                  "test": "StringLikeIfExists",
                  "values": [
                    "AES256",
                    "aws:kms"
                  ],
                  "variable": "s3:x-amz-server-side-encryption"
                },
                {
                  "test": "StringLikeIfExists",
                  "values": [
                    null
                  ],
                  "variable": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                }
              ],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [],
              "resources": [],
              "sid": null
            }
          ],
          "version": null
        },
        "after_unknown": {
          "id": true,
          "json": true,
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                true
              ]
            },
            {
              "actions": [
                false,
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                true,
                true
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false
              ],
              "condition": [
                {
                  "values": [
                    false,
                    false
                  ]
                },
                {
                  "values": [
                    true
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                true
              ]
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false,
                false,
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [],
              "resources": [
                false,
                false
              ]
            },
            {
              "actions": [
                false,
                false,
                false,
                false
              ],
              "condition": [
                {
                  "values": [
                    false,
                    false
                  ]
                },
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [],
              "resources": [
                false
              ]
            }
          ]
        }
      }
    },
    {
      "address": "data.aws_iam_policy_document.tenant_s3_policy",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "tenant_s3_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "override_json": null,
          "override_policy_documents": null,
          "policy_id": null,
          "source_json": null,
          "source_policy_documents": null,
          "statement": [
            {
              "actions": [
                "s3:PutObject"
              ],
              "condition": [
                {
                  "test": "StringNotEquals",
                  "values": [
                    "true"
                  ],
                  "variable": "s3:x-amz-server-side-encryption"
                },
                {
                  "test": "StringNotEquals",
                  "values": [
                    null
                  ],
                  "variable": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                }
              ],
              "effect": "Deny",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [
                {
                  "identifiers": [
                    "*"
                  ],
                  "type": "AWS"
                }
              ],
              "resources": [],
              "sid": "DenyUnEncryptedObjectUploads"
            },
            {
              "actions": [
                "s3:*"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [
                {
                  "type": "AWS"
                }
              ],
              "resources": [],
              "sid": "TenantS3BucketPolicy"
            }
          ],
          "version": null
        },
        "after_unknown": {
          "id": true,
          "json": true,
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    true
                  ]
                }
              ],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false
                  ]
                }
              ],
              "resources": [
                true
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": true
                }
              ],
              "resources": [
                true,
                true
              ]
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false
                  ]
                }
              ],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": []
                }
              ],
              "resources": [
                false,
                false
              ]
            }
          ]
        }
      }
    },
    {
      "address": "data.aws_iam_policy_document.tenant_s3_replica_policy",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "tenant_s3_replica_policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "override_json": null,
          "override_policy_documents": null,
          "policy_id": null,
          "source_json": null,
          "source_policy_documents": null,
          "statement": [
            {
              "actions": [
                "s3:PutObject"
              ],
              "condition": [
                {
                  "test": "StringNotEquals",
                  "values": [
                    "aws:kms"
                  ],
                  "variable": "s3:x-amz-server-side-encryption"
                },
                {
                  "test": "StringNotEquals",
                  "values": [
                    null
                  ],
                  "variable": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                }
              ],
              "effect": "Deny",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [
                {
                  "identifiers": [
                    "*"
                  ],
                  "type": "AWS"
                }
              ],
              "resources": [],
              "sid": "DenyUnEncryptedObjectUploads"
            },
            {
              "actions": [
                "s3:*"
              ],
              "condition": [],
              "effect": "Allow",
              "not_actions": null,
              "not_principals": [],
              "not_resources": null,
              "principals": [
                {
                  "identifiers": [
                    "arn:aws:iam::335561046948:role/wa2_role_services_cross_account",
                    "arn:aws:iam::335561046948:root"
                  ],
                  "type": "AWS"
                }
              ],
              "resources": [],
              "sid": "TenantS3BucketPolicy"
            }
          ],
          "version": null
        },
        "after_unknown": {
          "id": true,
          "json": true,
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    true
                  ]
                }
              ],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false
                  ]
                }
              ],
              "resources": [
                true
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false,
                    false,
                    true
                  ]
                }
              ],
              "resources": [
                true,
                true
              ]
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "statement": [
            {
              "actions": [
                false
              ],
              "condition": [
                {
                  "values": [
                    false
                  ]
                },
                {
                  "values": [
                    false
                  ]
                }
              ],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false
                  ]
                }
              ],
              "resources": [
                false
              ]
            },
            {
              "actions": [
                false
              ],
              "condition": [],
              "not_principals": [],
              "principals": [
                {
                  "identifiers": [
                    false,
                    false,
                    false
                  ]
                }
              ],
              "resources": [
                false,
                false
              ]
            }
          ]
        }
      }
    }
  ],
  "output_changes": {
    "tenant_aws_region": {
      "actions": [
        "no-op"
      ],
      "before": "eu-west-1",
      "after": "eu-west-1",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_master_kms_key_alias_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_master_kms_key_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_master_kms_key_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_primary_s3_bucket_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_primary_s3_bucket_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_replica_kms_key_alias_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_replica_kms_key_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_replica_kms_key_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_replica_s3_bucket_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_replica_s3_bucket_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "tenant_role_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "0.1",
    "terraform_version": "0.15.5",
    "values": {
      "outputs": {
        "tenant_aws_region": {
          "sensitive": false,
          "value": "eu-west-1"
        }
      },
      "root_module": {
        "resources": [
          {
            "address": "data.aws_caller_identity.current",
            "mode": "data",
            "type": "aws_caller_identity",
            "name": "current",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "account_id": "335561046948",
              "arn": "arn:aws:sts::335561046948:assumed-role/wa2_role_sreAdmin/1624023864480504000",
              "id": "335561046948",
              "user_id": "AROAU4IH7HOSKI6WT5SEK:1624023864480504000"
            }
          },
          {
            "address": "data.aws_iam_policy_document.s3_replication_assume_role_policy_document",
            "mode": "data",
            "type": "aws_iam_policy_document",
            "name": "s3_replication_assume_role_policy_document",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "4003806384",
              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      }\n    }\n  ]\n}",
              "override_json": null,
              "override_policy_documents": null,
              "policy_id": null,
              "source_json": null,
              "source_policy_documents": null,
              "statement": [
                {
                  "actions": [
                    "sts:AssumeRole"
                  ],
                  "condition": [],
                  "effect": "Allow",
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [
                    {
                      "identifiers": [
                        "s3.amazonaws.com"
                      ],
                      "type": "Service"
                    }
                  ],
                  "resources": [],
                  "sid": ""
                }
              ],
              "version": "2012-10-17"
            }
          },
          {
            "address": "data.aws_iam_policy_document.tenant_assume_role_policy_document",
            "mode": "data",
            "type": "aws_iam_policy_document",
            "name": "tenant_assume_role_policy_document",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "id": "3948457092",
              "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"s3.amazonaws.com\"\n      }\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::335561046948:role/kiam-server-devcluster\"\n      }\n    }\n  ]\n}",
              "override_json": null,
              "override_policy_documents": null,
              "policy_id": null,
              "source_json": null,
              "source_policy_documents": null,
              "statement": [
                {
                  "actions": [
                    "sts:AssumeRole"
                  ],
                  "condition": [],
                  "effect": "Allow",
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [
                    {
                      "identifiers": [
                        "s3.amazonaws.com"
                      ],
                      "type": "Service"
                    }
                  ],
                  "resources": [],
                  "sid": ""
                },
                {
                  "actions": [
                    "sts:AssumeRole"
                  ],
                  "condition": [],
                  "effect": "Allow",
                  "not_actions": [],
                  "not_principals": [],
                  "not_resources": [],
                  "principals": [
                    {
                      "identifiers": [
                        "arn:aws:iam::335561046948:role/kiam-server-devcluster"
                      ],
                      "type": "AWS"
                    }
                  ],
                  "resources": [],
                  "sid": ""
                }
              ],
              "version": "2012-10-17"
            }
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "expressions": {
          "region": {
            "references": [
              "var.aws_region"
            ]
          }
        }
      },
      "aws.replica": {
        "name": "aws",
        "alias": "replica",
        "expressions": {
          "region": {
            "references": [
              "local.replica_region"
            ]
          }
        }
      },
      "aws.us": {
        "name": "aws",
        "alias": "us",
        "expressions": {
          "region": {
            "constant_value": "us-east-1"
          }
        }
      }
    },
    "root_module": {
      "outputs": {
        "tenant_aws_region": {
          "expression": {
            "references": [
              "var.aws_region"
            ]
          },
          "description": "The AWS region where resources will be created"
        },
        "tenant_master_kms_key_alias_arn": {
          "expression": {
            "references": [
              "aws_kms_alias.master_key_alias"
            ]
          },
          "description": "The Amazon Resource Name (ARN) of the master key alias."
        },
        "tenant_master_kms_key_arn": {
          "expression": {
            "references": [
              "aws_kms_key.master_key"
            ]
          },
          "description": "The Amazon Resource Name (ARN) of the master key."
        },
        "tenant_master_kms_key_id": {
          "expression": {
            "references": [
              "aws_kms_key.master_key"
            ]
          },
          "description": "The globally unique identifier for the master key."
        },
        "tenant_primary_s3_bucket_arn": {
          "expression": {
            "references": [
              "aws_s3_bucket.tenant_s3_bucket"
            ]
          },
          "description": "ARN of tenant primary S3 Bucket"
        },
        "tenant_primary_s3_bucket_id": {
          "expression": {
            "references": [
              "aws_s3_bucket.tenant_s3_bucket"
            ]
          },
          "description": "ID of tenant primary S3 Bucket"
        },
        "tenant_replica_kms_key_alias_arn": {
          "expression": {
            "references": [
              "aws_kms_alias.replica_key_alias"
            ]
          },
          "description": "The Amazon Resource Name (ARN) of the replica key alias."
        },
        "tenant_replica_kms_key_arn": {
          "expression": {
            "references": [
              "aws_kms_key.replica_key"
            ]
          },
          "description": "The Amazon Resource Name (ARN) of the replica key."
        },
        "tenant_replica_kms_key_id": {
          "expression": {
            "references": [
              "aws_kms_key.replica_key"
            ]
          },
          "description": "The globally unique identifier for the replica key."
        },
        "tenant_replica_s3_bucket_arn": {
          "expression": {
            "references": [
              "aws_s3_bucket.tenant_s3_replica_bucket"
            ]
          },
          "description": "ARN of tenant replica S3 Bucket"
        },
        "tenant_replica_s3_bucket_id": {
          "expression": {
            "references": [
              "aws_s3_bucket.tenant_s3_replica_bucket"
            ]
          },
          "description": "ID of tenant replica S3 Bucket"
        },
        "tenant_role_arn": {
          "expression": {
            "references": [
              "aws_iam_role.tenant_role"
            ]
          },
          "description": "ARN of tenant role"
        }
      },
      "resources": [
        {
          "address": "aws_cloudfront_distribution.global_help_center_distribution",
          "mode": "managed",
          "type": "aws_cloudfront_distribution",
          "name": "global_help_center_distribution",
          "provider_config_key": "aws.us",
          "expressions": {
            "aliases": {
              "references": [
                "var.global_help_center_distribution_alias_enabled",
                "local.distribution_dns"
              ]
            },
            "default_cache_behavior": [
              {
                "allowed_methods": {
                  "constant_value": [
                    "DELETE",
                    "GET",
                    "HEAD",
                    "OPTIONS",
                    "PATCH",
                    "POST",
                    "PUT"
                  ]
                },
                "cached_methods": {
                  "constant_value": [
                    "GET",
                    "HEAD"
                  ]
                },
                "default_ttl": {
                  "constant_value": 3600
                },
                "forwarded_values": [
                  {
                    "cookies": [
                      {
                        "forward": {
                          "constant_value": "none"
                        }
                      }
                    ],
                    "query_string": {
                      "constant_value": false
                    }
                  }
                ],
                "lambda_function_association": [
                  {
                    "event_type": {
                      "constant_value": "origin-request"
                    },
                    "include_body": {
                      "constant_value": false
                    },
                    "lambda_arn": {
                      "references": [
                        "aws_lambda_function.sigv4_request_to_s3",
                        "count.index"
                      ]
                    }
                  }
                ],
                "max_ttl": {
                  "constant_value": 86400
                },
                "min_ttl": {
                  "constant_value": 0
                },
                "target_origin_id": {
                  "references": [
                    "local.s3_origin_id"
                  ]
                },
                "trusted_key_groups": {
                  "references": [
                    "aws_cloudfront_key_group.global_help_center",
                    "count.index"
                  ]
                },
                "viewer_protocol_policy": {
                  "constant_value": "redirect-to-https"
                }
              }
            ],
            "enabled": {
              "constant_value": true
            },
            "is_ipv6_enabled": {
              "constant_value": false
            },
            "origin": [
              {
                "custom_origin_config": [
                  {
                    "http_port": {
                      "constant_value": 80
                    },
                    "https_port": {
                      "constant_value": 443
                    },
                    "origin_protocol_policy": {
                      "constant_value": "https-only"
                    },
                    "origin_ssl_protocols": {
                      "constant_value": [
                        "TLSv1.2"
                      ]
                    }
                  }
                ],
                "domain_name": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket",
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                },
                "origin_id": {
                  "references": [
                    "local.s3_origin_id"
                  ]
                }
              }
            ],
            "price_class": {
              "constant_value": "PriceClass_All"
            },
            "restrictions": [
              {
                "geo_restriction": [
                  {
                    "restriction_type": {
                      "constant_value": "none"
                    }
                  }
                ]
              }
            ],
            "tags": {
              "references": [
                "local.tags"
              ]
            },
            "viewer_certificate": [
              {
                "acm_certificate_arn": {
                  "references": [
                    "data.aws_acm_certificate.certificate",
                    "count.index"
                  ]
                },
                "cloudfront_default_certificate": {
                  "constant_value": false
                },
                "minimum_protocol_version": {
                  "constant_value": "TLSv1.2_2019"
                },
                "ssl_support_method": {
                  "constant_value": "sni-only"
                }
              }
            ],
            "web_acl_id": {
              "references": [
                "aws_wafv2_web_acl.global_help_center_wafv2_web_acl",
                "count.index"
              ]
            }
          },
          "schema_version": 1,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_cloudfront_key_group.global_help_center",
          "mode": "managed",
          "type": "aws_cloudfront_key_group",
          "name": "global_help_center",
          "provider_config_key": "aws.us",
          "expressions": {
            "comment": {
              "constant_value": "global help center key group"
            },
            "items": {
              "references": [
                "aws_cloudfront_public_key.global_help_center",
                "count.index"
              ]
            },
            "name": {
              "constant_value": "global-help-center-key"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_cloudfront_public_key.global_help_center",
          "mode": "managed",
          "type": "aws_cloudfront_public_key",
          "name": "global_help_center",
          "provider_config_key": "aws.us",
          "expressions": {
            "comment": {
              "constant_value": "global help center public key"
            },
            "encoded_key": {
              "references": [
                "var.global_help_center_public_key_base64"
              ]
            },
            "name": {
              "constant_value": "global-help-center-key"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_iam_policy.global_help_center_lambda",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "global_help_center_lambda",
          "provider_config_key": "aws.us",
          "expressions": {
            "name": {
              "constant_value": "global_help_center_lambda_policy"
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.global_help_center_lambda",
                "count.index"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_iam_policy.s3_replication_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "s3_replication_policy",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "local.name_prefix"
              ]
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.s3_replication_policy_document"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_policy.tenant_iam_policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "tenant_iam_policy",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "local.name_prefix"
              ]
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.tenant_iam_policy_document"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role.global_help_center_lambda",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "global_help_center_lambda",
          "provider_config_key": "aws.us",
          "expressions": {
            "assume_role_policy": {
              "references": [
                "data.aws_iam_policy_document.global_help_center_lambda_assume_role",
                "count.index"
              ]
            },
            "name": {
              "constant_value": "global_help_center_sigv4_request_to_s3"
            },
            "path": {
              "constant_value": "/service-role/"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_iam_role.tenant_replication_role",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "tenant_replication_role",
          "provider_config_key": "aws",
          "expressions": {
            "assume_role_policy": {
              "references": [
                "data.aws_iam_policy_document.s3_replication_assume_role_policy_document"
              ]
            },
            "name": {
              "references": [
                "local.name_prefix"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role.tenant_role",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "tenant_role",
          "provider_config_key": "aws",
          "expressions": {
            "assume_role_policy": {
              "references": [
                "data.aws_iam_policy_document.tenant_assume_role_policy_document"
              ]
            },
            "name": {
              "references": [
                "local.name_prefix"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role_policy_attachment.global_help_center_lambda_iam_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "global_help_center_lambda_iam_policy_attachment",
          "provider_config_key": "aws.us",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.global_help_center_lambda",
                "count.index"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.global_help_center_lambda",
                "count.index"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.s3_replication_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "s3_replication_policy_attachment",
          "provider_config_key": "aws",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.s3_replication_policy"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.tenant_replication_role"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role_policy_attachment.s3_tenant_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "s3_tenant_policy_attachment",
          "provider_config_key": "aws",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.tenant_iam_policy"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.tenant_replication_role"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role_policy_attachment.tenant_role_iam_policy_attachment",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "tenant_role_iam_policy_attachment",
          "provider_config_key": "aws",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.tenant_iam_policy"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.tenant_role"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_kms_alias.master_key_alias",
          "mode": "managed",
          "type": "aws_kms_alias",
          "name": "master_key_alias",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "local.master_kms_name"
              ]
            },
            "target_key_id": {
              "references": [
                "aws_kms_key.master_key"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_kms_alias.replica_key_alias",
          "mode": "managed",
          "type": "aws_kms_alias",
          "name": "replica_key_alias",
          "provider_config_key": "aws.replica",
          "expressions": {
            "name": {
              "references": [
                "local.replica_kms_name"
              ]
            },
            "target_key_id": {
              "references": [
                "aws_kms_key.replica_key"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_kms_key.master_key",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "master_key",
          "provider_config_key": "aws",
          "expressions": {
            "customer_master_key_spec": {
              "references": [
                "var.kms_key_spec"
              ]
            },
            "deletion_window_in_days": {
              "references": [
                "var.kms_deletion_window_in_days"
              ]
            },
            "description": {
              "constant_value": "Tenant master key"
            },
            "enable_key_rotation": {
              "references": [
                "var.kms_enable_key_rotation"
              ]
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.kms_policy_document"
              ]
            },
            "tags": {
              "references": [
                "local.tags",
                "local.master_kms_name"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_kms_key.replica_key",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "replica_key",
          "provider_config_key": "aws.replica",
          "expressions": {
            "customer_master_key_spec": {
              "references": [
                "var.kms_key_spec"
              ]
            },
            "deletion_window_in_days": {
              "references": [
                "var.kms_deletion_window_in_days"
              ]
            },
            "description": {
              "constant_value": "Tenant replica key"
            },
            "enable_key_rotation": {
              "references": [
                "var.kms_enable_key_rotation"
              ]
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.kms_policy_document"
              ]
            },
            "tags": {
              "references": [
                "local.tags",
                "local.replica_kms_name"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_lambda_function.sigv4_request_to_s3",
          "mode": "managed",
          "type": "aws_lambda_function",
          "name": "sigv4_request_to_s3",
          "provider_config_key": "aws.us",
          "expressions": {
            "filename": {
              "references": [
                "data.archive_file.sigv4_request_to_s3",
                "count.index"
              ]
            },
            "function_name": {
              "constant_value": "global_help_center_sigv4_to_s3"
            },
            "handler": {
              "constant_value": "index.handler"
            },
            "publish": {
              "constant_value": true
            },
            "role": {
              "references": [
                "aws_iam_role.global_help_center_lambda",
                "count.index"
              ]
            },
            "runtime": {
              "constant_value": "nodejs12.x"
            },
            "source_code_hash": {
              "references": [
                "data.archive_file.sigv4_request_to_s3",
                "count.index"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          },
          "depends_on": [
            "data.archive_file.sigv4_request_to_s3"
          ]
        },
        {
          "address": "aws_route53_record.global_help_center_record",
          "mode": "managed",
          "type": "aws_route53_record",
          "name": "global_help_center_record",
          "provider_config_key": "aws",
          "expressions": {
            "alias": [
              {
                "evaluate_target_health": {
                  "constant_value": false
                },
                "name": {
                  "references": [
                    "aws_cloudfront_distribution.global_help_center_distribution",
                    "count.index"
                  ]
                },
                "zone_id": {
                  "references": [
                    "aws_cloudfront_distribution.global_help_center_distribution",
                    "count.index"
                  ]
                }
              }
            ],
            "name": {
              "references": [
                "local.distribution_dns"
              ]
            },
            "type": {
              "constant_value": "A"
            },
            "zone_id": {
              "references": [
                "data.aws_route53_zone.global_help_center_distribution_domain",
                "count.index"
              ]
            }
          },
          "schema_version": 2,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_route53_record.global_help_center_validation_record",
          "mode": "managed",
          "type": "aws_route53_record",
          "name": "global_help_center_validation_record",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "local.distribution_dns"
              ]
            },
            "records": {
              "references": [
                "local.distribution_dns",
                "aws_cloudfront_distribution.global_help_center_distribution",
                "count.index"
              ]
            },
            "ttl": {
              "constant_value": "60"
            },
            "type": {
              "constant_value": "TXT"
            },
            "zone_id": {
              "references": [
                "data.aws_route53_zone.global_help_center_distribution_domain",
                "count.index"
              ]
            }
          },
          "schema_version": 2,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_s3_bucket.tenant_s3_bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "tenant_s3_bucket",
          "provider_config_key": "aws",
          "expressions": {
            "acl": {
              "references": [
                "var.s3_bucket_acl"
              ]
            },
            "bucket": {
              "references": [
                "local.primary_bucket_name"
              ]
            },
            "force_destroy": {
              "references": [
                "var.s3_force_destroy"
              ]
            },
            "lifecycle_rule": [
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 2
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/latest: 2 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/latest"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/hourly: 1 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/hourly"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 7
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/daily: 7 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/daily"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 28
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/weekly: 28 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/weekly"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 3
                    }
                  }
                ],
                "id": {
                  "constant_value": "exports: delete current versions after 3 days"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "exports/"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 3
                    }
                  }
                ],
                "id": {
                  "constant_value": "imports: delete current versions after 3 days"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "imports/"
                }
              }
            ],
            "replication_configuration": [
              {
                "role": {
                  "references": [
                    "aws_iam_role.tenant_replication_role"
                  ]
                },
                "rules": [
                  {
                    "destination": [
                      {
                        "bucket": {
                          "references": [
                            "aws_s3_bucket.tenant_s3_replica_bucket"
                          ]
                        },
                        "replica_kms_key_id": {
                          "references": [
                            "aws_kms_key.replica_key"
                          ]
                        },
                        "storage_class": {
                          "constant_value": "STANDARD"
                        }
                      }
                    ],
                    "filter": [
                      {
                        "prefix": {
                          "constant_value": ""
                        }
                      }
                    ],
                    "id": {
                      "constant_value": "tenant-s3-replication"
                    },
                    "source_selection_criteria": [
                      {
                        "sse_kms_encrypted_objects": [
                          {
                            "enabled": {
                              "constant_value": true
                            }
                          }
                        ]
                      }
                    ],
                    "status": {
                      "constant_value": "Enabled"
                    }
                  }
                ]
              }
            ],
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": {
                          "references": [
                            "aws_kms_key.master_key"
                          ]
                        },
                        "sse_algorithm": {
                          "constant_value": "aws:kms"
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "tags": {
              "references": [
                "local.tags",
                "local.primary_bucket_name"
              ]
            },
            "versioning": [
              {
                "enabled": {
                  "references": [
                    "var.s3_bucket_versioning_enabled"
                  ]
                }
              }
            ]
          },
          "schema_version": 0,
          "depends_on": [
            "aws_s3_bucket.tenant_s3_replica_bucket"
          ]
        },
        {
          "address": "aws_s3_bucket.tenant_s3_replica_bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "tenant_s3_replica_bucket",
          "provider_config_key": "aws.replica",
          "expressions": {
            "acl": {
              "references": [
                "var.s3_bucket_acl"
              ]
            },
            "bucket": {
              "references": [
                "local.replica_bucket_name"
              ]
            },
            "force_destroy": {
              "references": [
                "var.s3_replica_force_destroy"
              ]
            },
            "lifecycle_rule": [
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 2
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/latest: 2 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/latest"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/hourly: 1 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/hourly"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 7
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/daily: 7 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/daily"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 28
                    }
                  }
                ],
                "id": {
                  "constant_value": "rethinkdb-backup/weekly: 28 day delete"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "rethinkdb-backup/weekly"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 3
                    }
                  }
                ],
                "id": {
                  "constant_value": "exports: delete current versions after 3 days"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "exports/"
                }
              },
              {
                "abort_incomplete_multipart_upload_days": {
                  "constant_value": 2
                },
                "enabled": {
                  "constant_value": "true"
                },
                "expiration": [
                  {
                    "days": {
                      "constant_value": 3
                    }
                  }
                ],
                "id": {
                  "constant_value": "imports: delete current versions after 3 days"
                },
                "noncurrent_version_expiration": [
                  {
                    "days": {
                      "constant_value": 1
                    }
                  }
                ],
                "prefix": {
                  "constant_value": "imports/"
                }
              }
            ],
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": {
                          "references": [
                            "aws_kms_key.replica_key"
                          ]
                        },
                        "sse_algorithm": {
                          "constant_value": "aws:kms"
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "tags": {
              "references": [
                "local.tags",
                "local.replica_bucket_name"
              ]
            },
            "versioning": [
              {
                "enabled": {
                  "references": [
                    "var.s3_bucket_versioning_enabled"
                  ]
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "aws_s3_bucket_policy.tenant_s3_bucket_policy_attatchment",
          "mode": "managed",
          "type": "aws_s3_bucket_policy",
          "name": "tenant_s3_bucket_policy_attatchment",
          "provider_config_key": "aws",
          "expressions": {
            "bucket": {
              "references": [
                "aws_s3_bucket.tenant_s3_bucket"
              ]
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.tenant_s3_policy"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_s3_bucket_policy.tenant_s3_replica_bucket_policy_attatchment",
          "mode": "managed",
          "type": "aws_s3_bucket_policy",
          "name": "tenant_s3_replica_bucket_policy_attatchment",
          "provider_config_key": "aws.replica",
          "expressions": {
            "bucket": {
              "references": [
                "aws_s3_bucket.tenant_s3_replica_bucket"
              ]
            },
            "policy": {
              "references": [
                "data.aws_iam_policy_document.tenant_s3_replica_policy"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_wafv2_ip_set.global_help_center_wafv2_ip_set",
          "mode": "managed",
          "type": "aws_wafv2_ip_set",
          "name": "global_help_center_wafv2_ip_set",
          "provider_config_key": "aws.us",
          "expressions": {
            "addresses": {
              "references": [
                "var.global_help_center_ip_allow_list"
              ]
            },
            "description": {
              "constant_value": "global help center IP Allow List"
            },
            "ip_address_version": {
              "constant_value": "IPV4"
            },
            "name": {
              "constant_value": "global-help-center"
            },
            "scope": {
              "constant_value": "CLOUDFRONT"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "aws_wafv2_web_acl.global_help_center_wafv2_web_acl",
          "mode": "managed",
          "type": "aws_wafv2_web_acl",
          "name": "global_help_center_wafv2_web_acl",
          "provider_config_key": "aws.us",
          "expressions": {
            "default_action": [
              {
                "block": [
                  {}
                ]
              }
            ],
            "description": {
              "constant_value": "global help center acl"
            },
            "name": {
              "constant_value": "global-help-center"
            },
            "rule": [
              {
                "action": [
                  {
                    "allow": [
                      {}
                    ]
                  }
                ],
                "name": {
                  "constant_value": "global_help_center_ip_set"
                },
                "priority": {
                  "constant_value": 1
                },
                "statement": [
                  {
                    "ip_set_reference_statement": [
                      {
                        "arn": {
                          "references": [
                            "aws_wafv2_ip_set.global_help_center_wafv2_ip_set",
                            "count.index"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "visibility_config": [
                  {
                    "cloudwatch_metrics_enabled": {
                      "constant_value": true
                    },
                    "metric_name": {
                      "constant_value": "global_help_center_cloudfront_ipal_rule"
                    },
                    "sampled_requests_enabled": {
                      "constant_value": true
                    }
                  }
                ]
              }
            ],
            "scope": {
              "constant_value": "CLOUDFRONT"
            },
            "tags": {
              "references": [
                "local.tags"
              ]
            },
            "visibility_config": [
              {
                "cloudwatch_metrics_enabled": {
                  "constant_value": true
                },
                "metric_name": {
                  "constant_value": "global_help_center_cloudfront"
                },
                "sampled_requests_enabled": {
                  "constant_value": true
                }
              }
            ]
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "random_string.r",
          "mode": "managed",
          "type": "random_string",
          "name": "r",
          "provider_config_key": "random",
          "expressions": {
            "length": {
              "constant_value": 16
            },
            "special": {
              "constant_value": false
            }
          },
          "schema_version": 1,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "data.archive_file.sigv4_request_to_s3",
          "mode": "data",
          "type": "archive_file",
          "name": "sigv4_request_to_s3",
          "provider_config_key": "archive",
          "expressions": {
            "output_path": {
              "references": [
                "path.module"
              ]
            },
            "source_file": {
              "references": [
                "path.module"
              ]
            },
            "type": {
              "constant_value": "zip"
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          },
          "depends_on": [
            "random_string.r"
          ]
        },
        {
          "address": "data.aws_acm_certificate.certificate",
          "mode": "data",
          "type": "aws_acm_certificate",
          "name": "certificate",
          "provider_config_key": "aws.us",
          "expressions": {
            "domain": {
              "references": [
                "var.global_help_center_distribution_domain"
              ]
            },
            "most_recent": {
              "constant_value": true
            },
            "statuses": {
              "constant_value": [
                "ISSUED"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "data.aws_caller_identity.current",
          "mode": "data",
          "type": "aws_caller_identity",
          "name": "current",
          "provider_config_key": "aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.global_help_center_lambda",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "global_help_center_lambda",
          "provider_config_key": "aws.us",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "s3:Get*",
                    "s3:List*"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "local.primary_bucket_name",
                    "var.global_help_center_s3_path",
                    "local.primary_bucket_name",
                    "var.global_help_center_s3_path"
                  ]
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "constant_value": [
                    "arn:aws:logs:*:*:*"
                  ]
                }
              }
            ]
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "data.aws_iam_policy_document.global_help_center_lambda_assume_role",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "global_help_center_lambda_assume_role",
          "provider_config_key": "aws.us",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "sts:AssumeRole"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "lambda.amazonaws.com",
                        "edgelambda.amazonaws.com"
                      ]
                    },
                    "type": {
                      "constant_value": "Service"
                    }
                  }
                ]
              }
            ]
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        },
        {
          "address": "data.aws_iam_policy_document.kms_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "kms_policy_document",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "kms:*"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "references": [
                        "data.aws_caller_identity.current"
                      ]
                    },
                    "type": {
                      "constant_value": "AWS"
                    }
                  }
                ],
                "resources": {
                  "constant_value": [
                    "*"
                  ]
                },
                "sid": {
                  "constant_value": "Enable IAM User Permissions"
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "kms:DescribeKey",
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                    "kms:List*",
                    "kms:CreateGrant"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "references": [
                        "aws_iam_role.tenant_role",
                        "aws_iam_role.tenant_replication_role",
                        "var.services_role_arn",
                        "var.global_help_center",
                        "aws_iam_role.global_help_center_lambda[0]",
                        "var.kms_allowed_role_arns"
                      ]
                    },
                    "type": {
                      "constant_value": "AWS"
                    }
                  }
                ],
                "resources": {
                  "constant_value": [
                    "*"
                  ]
                },
                "sid": {
                  "constant_value": "Allow IAM Role to use key"
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.s3_replication_assume_role_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "s3_replication_assume_role_policy_document",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "sts:AssumeRole"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "s3.amazonaws.com"
                      ]
                    },
                    "type": {
                      "constant_value": "Service"
                    }
                  }
                ]
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.s3_replication_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "s3_replication_policy_document",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "s3:GetReplicationConfiguration",
                    "s3:ListBucket"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "s3:Get*",
                    "s3:List*",
                    "s3:Put*",
                    "s3:Delete*",
                    "s3:ReplicateObject",
                    "s3:ReplicateDelete"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket",
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "s3:ReplicateObject",
                    "s3:ReplicateDelete",
                    "s3:ReplicateTags",
                    "s3:GetObjectVersionTagging",
                    "s3:GetObjectVersion",
                    "s3:GetObjectVersionForReplication"
                  ]
                },
                "condition": [
                  {
                    "test": {
                      "constant_value": "StringLikeIfExists"
                    },
                    "values": {
                      "constant_value": [
                        "aws:kms"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption"
                    }
                  }
                ],
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_replica_bucket"
                  ]
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "kms:Decrypt"
                  ]
                },
                "condition": [
                  {
                    "test": {
                      "constant_value": "StringLike"
                    },
                    "values": {
                      "references": [
                        "var.aws_region"
                      ]
                    },
                    "variable": {
                      "constant_value": "kms:ViaService"
                    }
                  },
                  {
                    "test": {
                      "constant_value": "StringLike"
                    },
                    "values": {
                      "references": [
                        "aws_s3_bucket.tenant_s3_bucket"
                      ]
                    },
                    "variable": {
                      "constant_value": "kms:EncryptionContext:aws:s3:arn"
                    }
                  }
                ],
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_kms_key.master_key"
                  ]
                },
                "sid": {
                  "constant_value": "DecryptionContext"
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "kms:Encrypt"
                  ]
                },
                "condition": [
                  {
                    "test": {
                      "constant_value": "StringLike"
                    },
                    "values": {
                      "references": [
                        "local.replica_region"
                      ]
                    },
                    "variable": {
                      "constant_value": "kms:ViaService"
                    }
                  },
                  {
                    "test": {
                      "constant_value": "StringLike"
                    },
                    "values": {
                      "references": [
                        "aws_s3_bucket.tenant_s3_replica_bucket"
                      ]
                    },
                    "variable": {
                      "constant_value": "kms:EncryptionContext:aws:s3:arn"
                    }
                  }
                ],
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_kms_key.replica_key"
                  ]
                },
                "sid": {
                  "constant_value": "EncryptionContext"
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.tenant_assume_role_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_assume_role_policy_document",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "sts:AssumeRole"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "s3.amazonaws.com"
                      ]
                    },
                    "type": {
                      "constant_value": "Service"
                    }
                  }
                ]
              },
              {
                "actions": {
                  "constant_value": [
                    "sts:AssumeRole"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "references": [
                        "var.use_kiam",
                        "var.kiam_role_arn"
                      ]
                    },
                    "type": {
                      "references": [
                        "var.use_kiam"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.tenant_iam_policy_document",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_iam_policy_document",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "s3:Delete*"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "s3:Get*",
                    "s3:List*",
                    "s3:Put*"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket",
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "s3:ReplicateObject",
                    "s3:ReplicateDelete",
                    "s3:ReplicateTags",
                    "s3:GetObjectVersionTagging"
                  ]
                },
                "condition": [
                  {
                    "test": {
                      "constant_value": "StringLikeIfExists"
                    },
                    "values": {
                      "constant_value": [
                        "AES256",
                        "aws:kms"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption"
                    }
                  },
                  {
                    "test": {
                      "constant_value": "StringLikeIfExists"
                    },
                    "values": {
                      "references": [
                        "aws_kms_key.replica_key"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                    }
                  }
                ],
                "effect": {
                  "constant_value": "Allow"
                },
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_replica_bucket"
                  ]
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.tenant_s3_policy",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_s3_policy",
          "provider_config_key": "aws",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "s3:PutObject"
                  ]
                },
                "condition": [
                  {
                    "test": {
                      "constant_value": "StringNotEquals"
                    },
                    "values": {
                      "constant_value": [
                        "true"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption"
                    }
                  },
                  {
                    "test": {
                      "constant_value": "StringNotEquals"
                    },
                    "values": {
                      "references": [
                        "aws_kms_key.master_key"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                    }
                  }
                ],
                "effect": {
                  "constant_value": "Deny"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "*"
                      ]
                    },
                    "type": {
                      "constant_value": "AWS"
                    }
                  }
                ],
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                },
                "sid": {
                  "constant_value": "DenyUnEncryptedObjectUploads"
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "s3:*"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "references": [
                        "aws_iam_role.tenant_role",
                        "local.concourse_arn",
                        "var.services_role_arn"
                      ]
                    },
                    "type": {
                      "constant_value": "AWS"
                    }
                  }
                ],
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_bucket",
                    "aws_s3_bucket.tenant_s3_bucket"
                  ]
                },
                "sid": {
                  "constant_value": "TenantS3BucketPolicy"
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_iam_policy_document.tenant_s3_replica_policy",
          "mode": "data",
          "type": "aws_iam_policy_document",
          "name": "tenant_s3_replica_policy",
          "provider_config_key": "aws.replica",
          "expressions": {
            "statement": [
              {
                "actions": {
                  "constant_value": [
                    "s3:PutObject"
                  ]
                },
                "condition": [
                  {
                    "test": {
                      "constant_value": "StringNotEquals"
                    },
                    "values": {
                      "constant_value": [
                        "aws:kms"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption"
                    }
                  },
                  {
                    "test": {
                      "constant_value": "StringNotEquals"
                    },
                    "values": {
                      "references": [
                        "aws_kms_alias.replica_key_alias"
                      ]
                    },
                    "variable": {
                      "constant_value": "s3:x-amz-server-side-encryption-aws-kms-key-id"
                    }
                  }
                ],
                "effect": {
                  "constant_value": "Deny"
                },
                "principals": [
                  {
                    "identifiers": {
                      "constant_value": [
                        "*"
                      ]
                    },
                    "type": {
                      "constant_value": "AWS"
                    }
                  }
                ],
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_replica_bucket"
                  ]
                },
                "sid": {
                  "constant_value": "DenyUnEncryptedObjectUploads"
                }
              },
              {
                "actions": {
                  "constant_value": [
                    "s3:*"
                  ]
                },
                "effect": {
                  "constant_value": "Allow"
                },
                "principals": [
                  {
                    "identifiers": {
                      "references": [
                        "data.aws_caller_identity.current",
                        "aws_iam_role.tenant_role",
                        "local.concourse_arn"
                      ]
                    },
                    "type": {
                      "constant_value": "AWS"
                    }
                  }
                ],
                "resources": {
                  "references": [
                    "aws_s3_bucket.tenant_s3_replica_bucket",
                    "aws_s3_bucket.tenant_s3_replica_bucket"
                  ]
                },
                "sid": {
                  "constant_value": "TenantS3BucketPolicy"
                }
              }
            ]
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_route53_zone.global_help_center_distribution_domain",
          "mode": "data",
          "type": "aws_route53_zone",
          "name": "global_help_center_distribution_domain",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "var.global_help_center_distribution_domain"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "references": [
              "var.global_help_center"
            ]
          }
        }
      ],
      "variables": {
        "aws_region": {
          "description": "AWS region to create resources"
        },
        "base_aws_tags": {
          "default": {},
          "description": "tags to apply to all resources"
        },
        "services_role_arn": {
          "default": "",
          "description": "ARN of services IAM role to be given access to S3 and KMS. Defaults to no access"
        },
        "environment": {
          "description": "Environment of the tenant i.e \"infra|dev|prd\""
        },
        "global_help_center": {
          "default": false,
          "description": "Set this to `true` to create the additional AWS resources required for serving the global help center content. Defaults to false."
        },
        "global_help_center_distribution_alias_enabled": {
          "default": false,
          "description": "Set this to `true` to enable the CloudFront distribution alias of `global_help_center_distribution_subdomain + global_help_center_distribution_subdomain` once we've requested the switch from AWS"
        },
        "global_help_center_distribution_domain": {
          "default": "",
          "description": "domain used for accessing the 'global help center tenant' CloudFront Distribution"
        },
        "global_help_center_distribution_subdomain": {
          "default": "",
          "description": "subdomain used for accessing the 'global help center tenant' CloudFront Distribution"
        },
        "global_help_center_ip_allow_list": {
          "default": [],
          "description": "List of IP addresses that will be granted access to the 'global help center' CloudFront distribution via WAFv2"
        },
        "global_help_center_public_key_base64": {
          "default": "",
          "description": "public key used for global help center signed URL's"
        },
        "global_help_center_s3_path": {
          "default": "global-help-center-content",
          "description": "path of the 'global help center tenant' content, stored in the tenants S3 bucket"
        },
        "kiam_role_arn": {
          "default": "",
          "description": "ARN of the cluster IAM role used by KIAM"
        },
        "kms_allowed_role_arns": {
          "default": [],
          "description": "Additional roles that can use the KMS key"
        },
        "kms_deletion_window_in_days": {
          "default": 30,
          "description": "Duration in days after which the key is deleted after destruction of the resource. Must be between 7 and 30 days"
        },
        "kms_enable_key_rotation": {
          "default": true,
          "description": "Specifies whether key rotation is enabled. Defaults to true."
        },
        "kms_key_spec": {
          "default": "SYMMETRIC_DEFAULT",
          "description": "Specifies the encryption algorithms."
        },
        "replica_regions": {
          "default": {
            "ap-southeast-2": "ap-southeast-1",
            "eu-west-1": "eu-central-1",
            "us-east-1": "us-west-2"
          },
          "description": "regions that the replica bucket will be created in"
        },
        "s3_bucket_acl": {
          "default": "private",
          "description": "Bucket ACL"
        },
        "s3_bucket_suffix": {
          "default": "main-v2",
          "description": "suffix of the primary bucket name"
        },
        "s3_bucket_versioning_enabled": {
          "default": true,
          "description": "S3 object versioning"
        },
        "s3_force_destroy": {
          "default": false,
          "description": "A boolean that indicates all objects (including any locked objects) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable."
        },
        "s3_replica_bucket_suffix": {
          "default": "replica-v2",
          "description": "suffix of the replica bucket name"
        },
        "s3_replica_force_destroy": {
          "default": false,
          "description": "A boolean that indicates all objects (including any locked objects) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable."
        },
        "tenant_uuid": {
          "description": "UUID of tenant"
        },
        "use_kiam": {
          "default": true,
          "description": "enable kiam to assume the tenant IAM role"
        }
      }
    }
  }
}
